from ctypes import Structure, sizeof, c_float, c_wchar, c_int
import mmap

class SPageFileStatic(Structure):
	_fields_ = [
		("smVersion", c_wchar * 15),
		("acVersion", c_wchar * 15),
		("numberOfSessions", c_int),
		("numCars", c_int),
		("carModel", c_wchar * 33),
		("track", c_wchar * 33),
		("playerName", c_wchar * 33),
		("playerSurname", c_wchar * 33),
		("playerNick", c_wchar * 33),
		("sectorCount", c_int),
		("maxTorque", c_float),
		("maxPower", c_float),
		("maxRpm", c_int),
		("maxFuel", c_float),
		("suspensionMaxTravel", c_float * 4),
		("tyreRadius", c_float * 4),
		("maxTurboBoost", c_float * 4),
		("deprecated_1", c_float),
		("deprecated_2", c_float),
		("penaltiesEnabled", c_int),
		("aidFuelRate", c_float),
		("aidTireRate", c_float),
		("aidMechanicalDamage", c_float),
		("aidAllowTyreBlankets", c_int),
		("aidStability", c_float),
		("aidAutoClutch", c_int),
		("aidAutoBlip", c_int),
		("hasDRS", c_int),
		("hasERS", c_int),
		("hasKERS", c_int),
		("kersMaxJ", c_float),
		("engineBrakeSettingsCount", c_int),
		("ersPowerControllerCount", c_int),
		("trackSPlineLength", c_float),
		("trackConfiguration", c_wchar * 33),
		("ersMaxJ", c_float),
		("isTimedRace", c_int),
		("hasExtraLap", c_int),
		("carSkin", c_wchar * 33),
		("reversedGridPositions", c_int),
		("PitWindowStart", c_int),
		("PitWindowEnd", c_int),
		("isOnline", c_int),
            ("dryTyresName", c_wchar * 33),
            ("wetTyresName", c_wchar * 33),
	]

	def toDict(self):
		return {
            "smVersion": self.smVersion,
            "acVersion": self.acVersion,
            "numberOfSessions": self.numberOfSessions,
            "numCars": self.numCars,
            "carModel": self.carModel,
            "track": self.track,
            "playerName": self.playerName,
            "playerSurname": self.playerSurname,
            "playerNick": self.playerNick,
            "sectorCount": self.sectorCount,
            "maxTorque": self.maxTorque,
            "maxPower": self.maxPower,
            "maxRpm": self.maxRpm,
            "maxFuel": self.maxFuel,
            "suspensionMaxTravel": self.suspensionMaxTravel,
            "tyreRadius": self.tyreRadius,
            "maxTurboBoost": self.maxTurboBoost,
            "deprecated_1": self.deprecated_1,
            "deprecated_2": self.deprecated_2,
            "penaltiesEnabled": self.penaltiesEnabled,
            "aidFuelRate": self.aidFuelRate,
            "aidTireRate": self.aidTireRate,
            "aidMechanicalDamage": self.aidMechanicalDamage,
            "aidAllowTyreBlankets": self.aidAllowTyreBlankets,
            "aidStability": self.aidStability,
            "aidAutoClutch": self.aidAutoClutch,
            "aidAutoBlip": self.aidAutoBlip,
            "hasDRS": self.hasDRS,
            "hasERS": self.hasERS,
            "hasKERS": self.hasKERS,
            "kersMaxJ": self.kersMaxJ,
            "engineBrakeSettingsCount": self.engineBrakeSettingsCount,
            "ersPowerControllerCount": self.ersPowerControllerCount,
            "trackSPlineLength": self.trackSPlineLength,
            "trackConfiguration": self.trackConfiguration,
            "ersMaxJ": self.ersMaxJ,
            "isTimedRace": self.isTimedRace,
            "hasExtraLap": self.hasExtraLap,
            "carSkin": self.carSkin,
            "reversedGridPositions": self.reversedGridPositions,
            "PitWindowStart": self.PitWindowStart,
            "PitWindowEnd": self.PitWindowEnd,
            "isOnline": self.isOnline,
            "dryTyresName": self.dryTyresName,
            "wetTyresName": self.wetTyresName,
		}

class SPageFileGraphic(Structure):
	_fields_ = [
		("packetId", c_int),
		("ACC_STATUS", c_int),
		("ACC_SESSION_TYPE", c_int),
		("currentTime", c_wchar * 15),
		("lastTime", c_wchar * 15),
		("bestTime", c_wchar * 15),
		("split", c_wchar * 15),
		("completedLaps", c_int),
		("position", c_int),
		("iCurrentTime", c_int),
		("iLastTime", c_int),
		("iBestTime", c_int),
		("sessionTimeLeft", c_float),
		("distanceTraveled", c_float),
		("isInPit", c_int),
		("currentSectorIndex", c_int),
		("lastSectorTime", c_int),
		("numberOfLaps", c_int),
		("tyreCompound", c_wchar * 33),
		("replayTimeMultiplier", c_float),
		("normalizedCarPosition", c_float),
		("activeCars", c_int),
		("carCoordinates", c_float * 60 * 3),
		("carID", c_int * 60),
		("playerCarID", c_int),
		("penaltyTime", c_float),
		("flag", c_int),
		("penalty", c_int),
		("idealLineOn", c_int),
		("isInPitLane", c_int),
		("surfaceGrip", c_float),
		("mandatoryPitDone", c_int),
		("windSpeed", c_float),
		("windDirection", c_float),
		("isSetupMenuVisible", c_int),
		("mainDisplayIndex", c_int),
		("secondaryDisplayIndex", c_int),
		("TC", c_int),
		("TCCut", c_int),
		("EngineMap", c_int),
		("ABS", c_int),
		("fuelXLap", c_int),
		("rainLights", c_int),
		("flashingLights", c_int),
		("lightsStage", c_int),
		("exhaustTemperature", c_float),
		("wiperLV", c_int),
		("DriverStintTotalTimeLeft", c_int),
		("DriverStintTimeLeft", c_int),
		("rainTyres", c_int),
            ("sessionIndex", c_int),
            ("usedFuel", c_float),
            ("deltaLapTime", c_wchar * 15),
            ("iDeltaLapTime", c_int),
            ("estimatedLapTime", c_wchar * 15),
            ("iEstimatedLapTime", c_int),
            ("isDeltaPositive", c_int),
            ("iSplit", c_int),
            ("isValidLap", c_int),
            ("fuelEstimatedLaps", c_float),
            ("trackStatus", c_wchar * 33),
            ("missingMandatoryPits", c_int),
            ("Clock", c_float),
            ("directionLightsLeft", c_int),
            ("directionLightsRight", c_int),
            ("GlobalYellow", c_int),
            ("GlobalYellow1", c_int),
            ("GlobalYellow2", c_int),
            ("GlobalYellow3", c_int),
            ("GlobalWhite", c_int),
            ("GlobalGreen", c_int),
            ("GlobalChequered", c_int),
            ("GlobalRed", c_int),
            ("mfdTyreSet", c_int),
            ("mfdFuelToAdd", c_float),
            ("mfdTyrePressureLF", c_float),
            ("mfdTyrePressureRF", c_float),
            ("mfdTyrePressureLR", c_float),
            ("mfdTyrePressureRR", c_float),
            ("trackGripStatus", c_int),
            ("rainIntensity", c_int),
            ("rainIntensityIn10min", c_int),
            ("rainIntensityIn30min", c_int),
            ("currentTyreSet", c_int),
            ("strategyTyreSet", c_int),            
            ("gapAhead", c_int),
            ("gapBehind", c_int),
	]

	def toDict(self):
		return {
            "packetId": self.packetId,
            "ACC_STATUS": self.ACC_STATUS,
            "ACC_SESSION_TYPE": self.ACC_SESSION_TYPE,
            "currentTime": self.currentTime,
            "lastTime": self.lastTime,
            "bestTime": self.bestTime,
            "split": self.split,
            "completedLaps": self.completedLaps,
            "position": self.position,
            "iCurrentTime": self.iCurrentTime,
            "iLastTime": self.iLastTime,
            "iBestTime": self.iBestTime,
            "sessionTimeLeft": self.sessionTimeLeft,
            "distanceTraveled": self.distanceTraveled,
            "isInPit": self.isInPit,
            "currentSectorIndex": self.currentSectorIndex,
            "lastSectorTime": self.lastSectorTime,
            "numberOfLaps": self.numberOfLaps,
            "tyreCompound": self.tyreCompound,
            "replayTimeMultiplier": self.replayTimeMultiplier,
            "normalizedCarPosition": self.normalizedCarPosition,
            "activeCars": self.activeCars,
            "carCoordinates": self.carCoordinates,
            "carID": self.carID,
            "playerCarID": self.playerCarID,
            "penaltyTime": self.penaltyTime,
            "flag": self.flag,
            "penalty": self.penalty,
            "idealLineOn": self.idealLineOn,
            "isInPitLane": self.isInPitLane,
            "surfaceGrip": self.surfaceGrip,
            "mandatoryPitDone": self.mandatoryPitDone,
            "windSpeed": self.windSpeed,
            "windDirection": self.windDirection,
            "isSetupMenuVisible": self.isSetupMenuVisible,
            "mainDisplayIndex": self.mainDisplayIndex,
            "secondaryDisplayIndex": self.secondaryDisplayIndex,
            "TC": self.TC,
            "TCCut": self.TCCut,
            "EngineMap": self.EngineMap,
            "ABS": self.ABS,
            "fuelXLap": self.fuelXLap,
            "rainLights": self.rainLights,
            "flashingLights": self.flashingLights,
            "lightsStage": self.lightsStage,
            "exhaustTemperature": self.exhaustTemperature,
            "wiperLV": self.wiperLV,
            "DriverStintTotalTimeLeft": self.DriverStintTotalTimeLeft,
            "DriverStintTimeLeft": self.DriverStintTimeLeft,
            "rainTyres": self.rainTyres,
            "sessionIndex": self.sessionIndex,
            "usedFuel": self.usedFuel,
            "deltaLapTime": self.deltaLapTime,
            "iDeltaLapTime": self.iDeltaLapTime,
            "estimatedLapTime": self.estimatedLapTime,
            "iEstimatedLapTime": self.iEstimatedLapTime,
            "isDeltaPositive": self.isDeltaPositive,
            "iSplit": self.iSplit,
            "isValidLap": self.isValidLap,
            "fuelEstimatedLaps": self.fuelEstimatedLaps,
            "trackStatus": self.trackStatus,
            "missingMandatoryPits": self.missingMandatoryPits,
            "Clock": self.Clock,
            "directionLightsLeft": self.directionLightsLeft,
            "directionLightsRight": self.directionLightsRight,
            "GlobalYellow": self.GlobalYellow,
            "GlobalYellow1": self.GlobalYellow1,
            "GlobalYellow2": self.GlobalYellow2,
            "GlobalYellow3": self.GlobalYellow3,
            "GlobalWhite": self.GlobalWhite,
            "GlobalGreen": self.GlobalGreen,
            "GlobalChequered": self.GlobalChequered,
            "GlobalRed": self.GlobalRed,
            "mfdTyreSet": self.mfdTyreSet,
            "mfdFuelToAdd": self.mfdFuelToAdd,
            "mfdTyrePressureLF": self.mfdTyrePressureLF,
            "mfdTyrePressureRF": self.mfdTyrePressureRF,
            "mfdTyrePressureLR": self.mfdTyrePressureLR,
            "mfdTyrePressureRR": self.mfdTyrePressureRR,
            "trackGripStatus": self.trackGripStatus,
            "rainIntensity": self.rainIntensity,
            "rainIntensityIn10min": self.rainIntensityIn10min,
            "rainIntensityIn30min": self.rainIntensityIn30min,
            "currentTyreSet": self.currentTyreSet,
            "strategyTyreSet": self.strategyTyreSet,
            "gapAhead": self.gapAhead,
            "gapBehind": self.gapBehind,
		}

class SPageFilePhysics(Structure):
	_fields_ = [
		("packetId", c_int),
		("gas", c_float),
		("brake", c_float),
		("fuel", c_float),
		("gear", c_int),
		("rpms", c_int),
		("steerAngle", c_float),
		("speedKmh", c_float),
		("velocity", c_float * 3),
		("accG", c_float * 3),
		("wheelSlip", c_float * 4),
		("wheelLoad", c_float * 4),
		("wheelPressure", c_float * 4),
		("wheelAngularSpeed", c_float * 4),
		("tyreWear", c_float * 4),
		("tyreDirtyLevel", c_float * 4),
		("tyreCoreTemperature", c_float * 4),
		("camberRAD", c_float * 4),
		("suspensionTravel", c_float * 4),
		("drs", c_float),
		("tc", c_float),
		("heading", c_float),
		("pitch", c_float),
		("roll", c_float),
		("cgHeight", c_float),
		("carDamage", c_float * 5),
		("numberOfTyresOut", c_int),
		("pitLimiterOn", c_int),
		("abs", c_float),
		("kersCharge", c_float),
		("kersInput", c_float),
		("autoShifterOn", c_int),
		("rideHeight", c_float * 2),
		("turboBoost", c_float),
		("ballast", c_float),
		("airDensity", c_float),
		("airTemp", c_float),
		("roadTemp", c_float),
		("localAngularVel", c_float * 3),
		("finalFF", c_float),
		("performanceMeter", c_float),
		("engineBrake", c_int),
		("ersRecoveryLevel", c_int),
		("ersPowerLevel", c_int),
		("ersHeatCharging", c_int),
		("ersIsCharging", c_int),
		("kersCurrentKJ", c_float),
		("drsAvailable", c_int),
		("drsEnabled", c_int),
		("brakeTemp", c_float * 4),
		("clutch", c_float),
		("tyreTempI", c_float * 4),
		("tyreTempM", c_float * 4),
		("tyreTempO", c_float * 4),
		("isAIControlled", c_int),
		("tyreContactPoint", c_float * 4 * 3),
		("tyreContactNormal", c_float * 4 * 3),
		("tyreContactHeading", c_float * 4 * 3),
		("brakeBias", c_float),
		("localVelocity", c_float * 3),
		("P2PActivations", c_int),
		("P2PStatus", c_int),
		("currentMaxRpm", c_int),
		("mz", c_float * 4),
		("fx", c_float * 4),
		("fy", c_float * 4),
		("slipRatio", c_float * 4),
		("slipAngle", c_float * 4),
		("tcinAction", c_int),
		("absInAction", c_int),
		("suspensionDamage", c_float * 4),
		("tyreTemp", c_float * 4),
            ("waterTemp", c_float),
            ("brakePressure", c_float * 4),
            ("frontBrakeCompound", c_int),
            ("rearBrakeCompound", c_int),
            ("padLife", c_float * 4),
            ("discLife", c_float * 4),
            ("ignitionOn", c_int),
            ("starterEngineOn", c_int),
            ("EngineRunning", c_int),
            ("kerbVibration", c_float),
            ("slipVibrations", c_float),
            ("gVibrations", c_float),
            ("absVibrations", c_float),
	]

	def toDict(self):
		return {
            "packetId": self.packetId,
            "gas": self.gas,
            "brake": self.brake,
            "fuel": self.fuel,
            "gear": self.gear,
            "rpms": self.rpms,
            "steerAngle": self.steerAngle,
            "speedKmh": self.speedKmh,
            "velocity": self.velocity,
            "accG": self.accG,
            "wheelSlip": self.wheelSlip,
            "wheelLoad": self.wheelLoad,
            "wheelPressure": self.wheelPressure,
            "wheelAngularSpeed": self.wheelAngularSpeed,
            "tyreWear": self.tyreWear,
            "tyreDirtyLevel": self.tyreDirtyLevel,
            "tyreCoreTemperature": self.tyreCoreTemperature,
            "camberRAD": self.camberRAD,
            "suspensionTravel": self.suspensionTravel,
            "drs": self.drs,
            "tc": self.tc,
            "heading": self.heading,
            "pitch": self.pitch,
            "roll": self.roll,
            "cgHeight": self.cgHeight,
            "carDamage": self.carDamage,
            "numberOfTyresOut": self.numberOfTyresOut,
            "pitLimiterOn": self.pitLimiterOn,
            "abs": self.abs,
            "kersCharge": self.kersCharge,
            "kersInput": self.kersInput,
            "autoShifterOn": self.autoShifterOn,
            "rideHeight": self.rideHeight,
            "turboBoost": self.turboBoost,
            "ballast": self.ballast,
            "airDensity": self.airDensity,
            "airTemp": self.airTemp,
            "roadTemp": self.roadTemp,
            "localAngularVel": self.localAngularVel,
            "finalFF": self.finalFF,
            "performanceMeter": self.performanceMeter,
            "engineBrake": self.engineBrake,
            "ersRecoveryLevel": self.ersRecoveryLevel,
            "ersPowerLevel": self.ersPowerLevel,
            "ersHeatCharging": self.ersHeatCharging,
            "ersIsCharging": self.ersIsCharging,
            "kersCurrentKJ": self.kersCurrentKJ,
            "drsAvailable": self.drsAvailable,
            "drsEnabled": self.drsEnabled,
            "brakeTemp": self.brakeTemp,
            "clutch": self.clutch,
            "tyreTempI": self.tyreTempI,
            "tyreTempM": self.tyreTempM,
            "tyreTempO": self.tyreTempO,
            "isAIControlled": self.isAIControlled,
            "tyreContactPoint": self.tyreContactPoint,
            "tyreContactNormal": self.tyreContactNormal,
            "tyreContactHeading": self.tyreContactHeading,
            "brakeBias": self.brakeBias,
            "localVelocity": self.localVelocity,
            "P2PActivations": self.P2PActivations,
            "P2PStatus": self.P2PStatus,
            "currentMaxRpm": self.currentMaxRpm,
            "mz": self.mz,
            "fx": self.fx,
            "fy": self.fy,
            "slipRatio": self.slipRatio,
            "slipAngle": self.slipAngle,
            "tcinAction": self.tcinAction,
            "absInAction": self.absInAction,
            "suspensionDamage": self.suspensionDamage,
            "tyreTemp": self.tyreTemp,
            "waterTemp": self.waterTemp,
            "brakePressure": self.brakePressure,
            "frontBrakeCompound": self.frontBrakeCompound,
            "rearBrakeCompound": self.rearBrakeCompound,
            "padLife": self.padLife,
            "discLife": self.discLife,
            "ignitionOn": self.ignitionOn,
            "starterEngineOn": self.starterEngineOn,
            "EngineRunning": self.EngineRunning,
            "kerbVibration": self.kerbVibration,
            "slipVibrations": self.slipVibrations,
            "gVibrations": self.gVibrations,
            "absVibrations": self.absVibrations,
		}

def read_physics():
	buf = mmap.mmap(-1, sizeof(SPageFilePhysics), u"Local\\acpmf_physics")
	data = SPageFilePhysics.from_buffer(buf)
	return data.toDict()

def read_static():
	buf = mmap.mmap(-1, sizeof(SPageFileStatic), u"Local\\acpmf_static")
	data = SPageFileStatic.from_buffer(buf)
	return data.toDict()

def read_graphics():
	buf = mmap.mmap(-1, sizeof(SPageFileGraphic), u"Local\\acpmf_graphics")
	data = SPageFileGraphic.from_buffer(buf)
	return data.toDict()